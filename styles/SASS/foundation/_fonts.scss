/* ----------------------- IMPORTS ----------------------------- */

@import '_colors.scss';
@import '_mediaQueries.scss';

/*
 * The custom font-families that the site will use are:
 *
 * Source Sans Pro
 * Cardo
 *
 */
@import url(http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700,300italic,400italic,600italic|Cardo:400,700,400italic);

/* ----------------------- LOCAL CONSTANTS ----------------------------- */

$FONTS:
(
	tinyFontSize: 12px,
	smallFontSize: 16px,
	regularFontSize: 18px,
	regularPlusFontSize: 20px,
	largeFontSize: 24px,
	largePlusFontSize: 28px,
	giganticFontSize: 36px,

	mobileTinyFontSize: 10px,
	mobileSmallFontSize: 12px,
	mobileRegularFontSize: 16px,
	mobileRegularPlusFontSize: 18px,
	mobileLargeFontSize: 20px,
	mobileLargePlusFontSize: 24px,
	mobileGiganticFontSize: 28px
);

/* ----------------------- MIX-INS ----------------------------- */

/*
 * Mixin built to provide a convenient way to set basic font styles quickly
 *
 * @param $weight - the font weight
 * @param $size - the font size
 * @param $family - the font family
 * @param $style - the font style
 * @param $color - an optional parameter that allows one to specify a font color
 *
 * @author kinsho
 */
@mixin basicFontSettings($weight: 400, $size: map-get($FONTS, smallFontSize), $family: Source Sans Pro, $style: normal, $color: null)
{
	font:
	{
		weight: $weight;
		size: $size;
		family: $family, sans-serif;
		style: $style;
	}

	@if ($color)
	{
		color: $color;
	}
}

// Mixin reserved for header text
@mixin headerSettings($size, $style, $weight: 700, $padding: 10px, $textAlign: center)
{
	@include basicFontSettings($weight: $weight, $size: $size, $family: Cardo);

	padding:
	{
		top: $padding;
		bottom: $padding;
	}

	text-align: $textAlign;
	white-space: nowrap;

	// No content clause needed here. The only hard-coded properties above should remain as is
}

// Mixin to produce a sexy white font
@mixin sexyWhiteFont($size)
{
	@include basicFontSettings($weight: 700, $size: $size, $family: Source Sans Pro, $style: italic, $color: map-get($COLORS, lightWhiteTheme));

	text-shadow: 1px 1px 0 #000000;

	@content;
}

// Mixin to produce a stylized blue font, typically used for links
@mixin blueFont($size, $family: Cardo, $style: normal, $weight: 700)
{
	@include basicFontSettings($size: $size, $family: $family, $style: $style, $weight: $weight, $color: map-get($COLORS, darkBlueTheme));
}

// Mixin to produce a stylized blue font, typically used for links
@mixin darkerBlueFont($size, $family: Cardo, $style: normal, $weight: 700)
{
	@include basicFontSettings($size: $size, $family: $family, $style: $style, $weight: $weight, $color: map-get($COLORS, darkerBlueTheme));
}

// Mixin to produce a positive-themed font to relay good news to users
@mixin positiveFont($size, $family: Cardo, $style: normal, $weight: 700)
{
	@include basicFontSettings($size: $size, $family: $family, $style: $style, $weight: $weight, $color: map-get($COLORS, positiveTheme));
}

// Mixin to produce a negative-themed font to relay bad news to users
@mixin negativeFont($size, $family: Cardo, $style: normal, $weight: 700)
{
	@include basicFontSettings($size: $size, $family: $family, $style: $style, $weight: $weight, $color: map-get($COLORS, negativeTheme));
}

// Mixin to produce a neutral-themed font to relay news of a neutral nature to users
@mixin neutralFont($size, $family: Cardo, $style: normal, $weight: 700)
{
	@include basicFontSettings($size: $size, $family: $family, $style: $style, $weight: $weight, $color: map-get($COLORS, darkGreenTheme));
}

/* ----------------------- PLACEHOLDERS ----------------------------- */

/* --- Italicized and bold stylings --- */
%italicizedFont
{
	font:
	{
		style: italic;
	}
}

%boldFont
{
	font:
	{
		weight: 700;
	}
}

/* --- Header stylings --- */
%h2
{
	@include headerSettings($size: map-get($FONTS, giganticFontSize), $style: italic, $weight: 400, $padding: 20px, $textAlign: left);

//	{map-get($MEDIA, 'mobile')}
//	{
//		@include headerSettings($size: map-get($FONTS, mobileGiganticFontSize), $style: italic, $weight: 400, $padding: 20px, $textAlign: left);
//	}
}

%h3
{
	@include headerSettings($size: map-get($FONTS, largePlusFontSize), $style: normal, $weight: 700, $padding: 20px, $textAlign: center)
}

/* --- Normal text fonts --- */
%tinyFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, tinyFontSize), $family: Source Sans Pro);
}

%smallFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, smallFontSize), $family: Source Sans Pro);
}

%smallCardoFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, smallFontSize), $family: Cardo);
}

%regularFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, regularFontSize), $family: Source Sans Pro);
}

%regularCardoFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, regularFontSize), $family: Cardo);
}

%regularPlusFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, regularPlusFontSize), $family: Source Sans Pro);
}

%largeFont
{
	@include basicFontSettings($weight: 400, $size: map-get($FONTS, largeFontSize), $family: Source Sans Pro);
}

/* --- Colored fonts --- */

%regularWhiteFont
{
	@extend %regularFont;

	color: map-get($COLORS, whiteTheme);
}

%majorWhiteFont
{
	@include sexyWhiteFont($size: map-get($FONTS, regularPlusFontSize));
}

%veryMajorWhiteFont
{
	@include sexyWhiteFont($size: map-get($FONTS, largePlusFontSize));
}

%smallBlueFont
{
	@include blueFont($size: map-get($FONTS, smallFontSize));
}

%regularBlueFont
{
	@include blueFont($size: map-get($FONTS, regularFontSize));
}

%regularPlusBlueFont
{
	@include blueFont($size: map-get($FONTS, regularPlusFontSize));
}

%largeBlueFont
{
	@include blueFont($size: map-get($FONTS, largeFontSize));
}

%tinyBluerFont
{
	@include darkerBlueFont($size: map-get($FONTS, tinyFontSize));
}

%smallBluerFont
{
	@include darkerBlueFont($size: map-get($FONTS, smallFontSize));
}

/* --- Mood fonts --- */
%smallPositiveFont
{
	@include positiveFont($size: map-get($FONTS, smallFontSize));
}

%regularPositiveFont
{
	@include positiveFont($size: map-get($FONTS, regularFontSize));
}

%largePositiveFont
{
	@include positiveFont($size: map-get($FONTS, largeFontSize));
}

%smallNegativeFont
{
	@include negativeFont($size: map-get($FONTS, smallFontSize));
}

%regularNegativeFont
{
	@include negativeFont($size: map-get($FONTS, regularFontSize));
}

%largeNegativeFont
{
	@include negativeFont($size: map-get($FONTS, largeFontSize));
}

%smallNeutralFont
{
	@include neutralFont($size: map-get($FONTS, smallFontSize));
}

%regularNeutralFont
{
	@include neutralFont($size: map-get($FONTS, regularFontSize));
}

%largeNeutralFont
{
	@include neutralFont($size: map-get($FONTS, largeFontSize));
}