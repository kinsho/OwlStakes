/* ----------------------- IMPORTS ----------------------------- */

@import '_fonts.scss';
@import '_colors.scss';
@import '_utility.scss';

/* ----------------------- LOCAL CONSTANTS ----------------------------- */

$MODAL: 
(
	navArrowRightImageLink: '../../images/navArrowRight.png',
	navArrowLeftImageLink: '../../images/navArrowLeft.png',

	modalExitImageLink: '../../images/closeModalIcon.png'
);

/* ----------------------- GENERAL STYLING ----------------------------- */

// Main class responsible for all modal styling
.modal
{
	/* Locally defined lists to set multiple transitions properties on all modals */
	$transitionProperties: opacity, transform, -webkit-transform, -moz-transform, -ms-transform, -o-transform;
	$webkitTransitionProperties: opacity, -webkit-transform;
	$transitionTimings: linear, linear;
	$transitionDurations: 0.5s, 0.5s;
	$transitionDelays: 0s, 0s;

	@include transitionSettings($property: $transitionProperties,$webkitProperty: $webkitTransitionProperties, $timing: $transitionTimings,
		$duration: $transitionDurations, $delay: $transitionDelays);
	@include shiftTransition(-50%, -50%);

	border:
	{
		style: solid;
		color: map-get($COLORS, lightBlueTheme);

		width: 8px;
		radius: 25px;
	}

	box-shadow: 2px 4px 10px 0px;
	background-color: map-get($COLORS, lightWhiteTheme);

	position: fixed;
	left: 50%;
	top: 50%;
	z-index: 9999;

	opacity: 0.0;

	&.littleModal
	{
		width: 20%;
	}

	&.midsizeModal
	{
		width: 50%;
	}

	// A nested modal is a modal that is overlaid over another modal that's currently visible
	&.nestedModal
	{
		border:
		{
			color: map-get($COLORS, lightGreenTheme)
		}

		z-index: 10001;
		width: 20%;
	}

	&.halfFadeOut
	{
		opacity: 0.5;
	}

	&.fadeIn
	{
		opacity: 1.0;
	}

	// The offsets below allow the modal to be shifted slightly in any direction
	&.offsetUp
	{
		@include shiftTransition(-50%, calc(-50% - 50px));
	}

	&.offsetLeft
	{
		@include shiftTransition(calc(-50% - 100px), -50%);
	}

	&.offsetRight
	{
		@include shiftTransition(calc(-50% + 100px), -50%);
	}

	&.offsetDown
	{
		@include shiftTransition(-50%, calc(-50% + 50px));
	}
}

.modalHeader
{
	@extend %majorWhiteFont;

	padding:
	{
		top: 10px;
		bottom: 10px;
		left: 5px;
		right: 5px;
	}

	background-color: map-get($COLORS, darkGreenTheme);

	&.errorHeader
	{
		background-color: map-get($COLORS, negativeTheme);
	}

	&.noticeHeader
	{
		background-color: map-get($COLORS, noticeTheme);
	}
}

.modalBody
{
	@extend %regularFont;

	padding:
	{
		left: 15px;
		right: 15px;
		top: 20px;
		bottom: 20px;
	}
}

// The styling for the 'close' button to be placed in the upper-right hand corner of certain modals
.modalCloseButton
{
	@include truePosition($left: calc(100% - 40px), $top: 10px);

	& > div
	{
		background-image: url(map-get($MODAL, modalExitImageLink));
		width: 32px;
		height: 32px;
	}
}

// Necessary to set aside some much-needed spacing between the modal content and any action links
.navButtonContainer
{
	margin:
	{
		top: 20px;
	}
}

// Styling for the modal's action links
.navButton
{
	@extend %regularPlusBlueFont;

	cursor: pointer;

	&.rightArrow:after
	{
		content: url(map-get($MODAL, navArrowRightImageLink));

		padding:
		{
			left: 10px;
			top: 10px;
		}
	}

	&.leftArrow:before
	{
		content: url(map-get($MODAL, navArrowLeftImageLink));

		padding:
		{
			right: 10px;
			top: 10px;
		}
	}
}

// The black veil-like effect that covers the screen before the modal is faded in
.modalOverlay
{
	@include transitionSettings($property: opacity, $timing: linear, $duration: 0.5s, $delay: 0s);

	width: 100%;
	height: 100%;

	position: fixed;
	top: 0;
	left: 0;

	opacity: 0.0;
	z-index: 9998;
	background-color: rgba(0, 0, 0, 0.4);

	&.fadeIn
	{
		opacity: 1.0;
	}
}

// A deeper veil-like effect that covers the screen and any currently visible modal before a nested modal is faded in
.strongerModalOverlay
{
	@extend .modalOverlay;

	$zIndex: 10000;
	background-color: rgba(0, 0, 0, 0.3);
}