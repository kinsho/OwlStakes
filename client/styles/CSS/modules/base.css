/* ----------------------- IMPORTS ----------------------------- */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mix-in designed to render a gradient background on a particular element
 * Works across all major browsers
 *
 * @param $initialColor - the color which will launch the gradient
 * @param $endColor - the color which will mark the tail of the rendered gradient
 * @param $direction - the direction in which the gradient will render across the background of the element
 *
 * @author kinsho
 */
/* ----------------------- IMPORTS ----------------------------- */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mix-in designed to render a gradient background on a particular element
 * Works across all major browsers
 *
 * @param $initialColor - the color which will launch the gradient
 * @param $endColor - the color which will mark the tail of the rendered gradient
 * @param $direction - the direction in which the gradient will render across the background of the element
 *
 * @author kinsho
 */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/*
 * The custom font-families that the site will use are:
 *
 * Source Sans Pro
 * Cardo
 *
 */
@import url(http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700,300italic,400italic,600italic|Cardo:400,700,400italic);
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mixin built to provide a convenient way to set basic font styles quickly
 *
 * @param $weight - the font weight
 * @param $size - the font size
 * @param $family - the font family
 * @param $style - the font style
 * @param $color - an optional parameter that allows one to specify a font color
 *
 * @author kinsho
 */
/* ----------------------- PLACEHOLDERS ----------------------------- */
/* --- Italicized and bold stylings --- */
@import url(http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700,300italic,400italic,600italic|Cardo:400,700,400italic);
.infoRow {
  font-style: italic; }

/* --- Header stylings --- */
/* --- Normal text fonts --- */
input, select, .checkbox > input:checked + label:before {
  font-weight: 400;
  font-size: 16px;
  font-family: Source Sans Pro, sans-serif;
  font-style: normal; }

label {
  font-weight: 400;
  font-size: 16px;
  font-family: Cardo, sans-serif;
  font-style: normal; }

.infoRow, .content {
  font-weight: 400;
  font-size: 18px;
  font-family: Source Sans Pro, sans-serif;
  font-style: normal; }

/* --- Colored fonts --- */
input[type='button'], select[type='button'] {
  font-weight: 700;
  font-size: 20px;
  font-family: Source Sans Pro, sans-serif;
  font-style: italic;
  color: #F8F8F8;
  text-shadow: 1px 1px 0 #000000; }

a {
  font-weight: 700;
  font-size: 16px;
  font-family: Cardo, sans-serif;
  font-style: normal;
  color: #0101DF; }

/* --- Mood fonts --- */
/* --- Context fonts --- */
/* ----------------------- IMPORTS ----------------------------- */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mix-in designed to render a gradient background on a particular element
 * Works across all major browsers
 *
 * @param $initialColor - the color which will launch the gradient
 * @param $endColor - the color which will mark the tail of the rendered gradient
 * @param $direction - the direction in which the gradient will render across the background of the element
 *
 * @author kinsho
 */
/* ----------------------- IMPORTS ----------------------------- */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mix-in designed to render a gradient background on a particular element
 * Works across all major browsers
 *
 * @param $initialColor - the color which will launch the gradient
 * @param $endColor - the color which will mark the tail of the rendered gradient
 * @param $direction - the direction in which the gradient will render across the background of the element
 *
 * @author kinsho
 */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/*
 * The custom font-families that the site will use are:
 *
 * Source Sans Pro
 * Cardo
 *
 */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mixin built to provide a convenient way to set basic font styles quickly
 *
 * @param $weight - the font weight
 * @param $size - the font size
 * @param $family - the font family
 * @param $style - the font style
 * @param $color - an optional parameter that allows one to specify a font color
 *
 * @author kinsho
 */
/* ----------------------- PLACEHOLDERS ----------------------------- */
/* --- Italicized and bold stylings --- */
.infoRow {
  font-style: italic; }

/* --- Header stylings --- */
/* --- Normal text fonts --- */
input, select, .checkbox > input:checked + label:before {
  font-weight: 400;
  font-size: 16px;
  font-family: Source Sans Pro, sans-serif;
  font-style: normal; }

label {
  font-weight: 400;
  font-size: 16px;
  font-family: Cardo, sans-serif;
  font-style: normal; }

.infoRow, .content {
  font-weight: 400;
  font-size: 18px;
  font-family: Source Sans Pro, sans-serif;
  font-style: normal; }

/* --- Colored fonts --- */
input[type='button'], select[type='button'] {
  font-weight: 700;
  font-size: 20px;
  font-family: Source Sans Pro, sans-serif;
  font-style: italic;
  color: #F8F8F8;
  text-shadow: 1px 1px 0 #000000; }

a {
  font-weight: 700;
  font-size: 16px;
  font-family: Cardo, sans-serif;
  font-style: normal;
  color: #0101DF; }

/* --- Mood fonts --- */
/* --- Context fonts --- */
/* ----------------------- MIX-INS ----------------------------- */
/*
 * Mix-in responsible for styling any informational row
 *
 * @author kinsho
 */
/*
 * Mix-in responsible for setting styling on hint tip icons
 *
 * @author kinsho
 */
/*
 * Mix-in responsible for setting basic styling for any tag
 *
 * @param [$topOrBottom] - value indicating whether the tab is to be placed on top of
 *		some container or on the bottom of a container. The only valid values here are
 *		'top' or 'bottom'
 *
 * @author kinsho
 */
/*
 * Mixin responsible for generating a quick little label that can be placed next to text in 
 * order to adorn that text with an additional qualifier
 *
 * @param $content - the text to put into the label
 *
 * @author kinsho
 */
/*
 * Mixin responsible for providing all the styling for a suggestion box associated with an autocomplete
 * form field
 *
 * @param $zIndex - the depth of the image relative to the viewport
 *
 * @author kinsho
 */
/*
 * Mixin responsible for providing all the styling for toggleSwitches
 *
 * @author kinsho
 */
/*
 * Mixin responsible for surrounding the target element with horizontal rules in order to emphasize
 * the text within the element
 *
 * @author kinsho
 */
/*
 * Mix-in designed to generate a circular container
 *
 * @param $diameter - a measurement of the size of the circle that will need to be generated
 * @param $color - the color to fill into the circle upon render
 *
 * @author kinsho
 */
/*
 * Mix-in is responsible for generating a triangular indicator depending on the passed direction
 *
 * @param $direction - the direction in which the triangular indicator will point
 * @param $width - the width of the indicator
 * @param $color - the color of the indicator
 *
 * @author kinsho
 */
/*
 * Mix-in is responsible for generating an incredibly fancy checkbox
 *
 * @param $dimensions - the height/width of the resulting checkbox to generate. Note that the checkbox
 *		will have its width equal to its height, for aesthetic purposes.
 *
 * @author kinsho
 */
/* ----------------------- LOCAL CONSTANTS ----------------------------- */
/* ----------------------- PLACEHOLDERS ----------------------------- */
.pageBreak {
  height: 5px;
  display: block; }

.smallHeightener {
  height: 20px;
  display: block; }

/* ----------------------- BASIC TAG STYLING ----------------------------- */
label {
  margin-left: 15px;
  margin-right: 15px;
  white-space: nowrap; }
  label.requiredMarker:after {
    content: '*';
    margin-left: 5px;
    color: #FF3333; }

input, select {
  margin-bottom: 10px;
  outline-style: outset;
  outline-width: 1px;
  outline-color: #CDCDCD;
  width: 100%;
  min-width: 50px;
  min-height: 20px;
  background-color: #F8F8F8; }
  input.invalid, select.invalid {
    border-width: 2px;
    border-style: ridge;
    border-color: #CC3355;
    background-color: #FFAAAA; }
    input.invalid:focus, select.invalid:focus {
      background-color: #FFFFFF; }
  input:disabled, select:disabled {
    outline-width: 0px;
    background-color: #CDCDCD; }
  input:not([type='button']):focus, select:not([type='button']):focus {
    background-color: #FFFFFF;
    border-color: #000000;
    border-width: 2px; }
  input[type='button'], select[type='button'] {
    border-color: #3399FF;
    border-width: 4px;
    border-radius: 15px;
    outline-style: none;
    outline-width: 0px;
    background-color: #3399FF;
    cursor: none; }
    input[type='button']:disabled, select[type='button']:disabled {
      opacity: 0.5; }

option[disabled='disabled'] {
  color: #A0A0A0; }

a {
  text-decoration: none; }

/* ----------------------- COMMON CLASSES ----------------------------- */
.infoRow {
  margin-top: 5px;
  margin-bottom: 5px;
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: 10px;
  padding-right: 10px;
  border-width: 1px;
  border-style: solid;
  border-color: #BBDBFF;
  border-radius: 10px;
  display: inline-block;
  background-color: #EEEEFF; }
  .infoRow.centerRow {
    margin-left: auto;
    margin-right: auto; }
  .infoRow > .infoRowImage {
    float: left; }
  .infoRow > .infoRowContent {
    padding-left: 10px;
    float: right; }

.hintTip {
  margin-left: 10px;
  margin-right: 10px; }

.checkbox {
  margin-left: 15px;
  width: 100%; }
  .checkbox > input {
    display: none; }
    .checkbox > input:checked + label:before {
      content: "\2713";
      text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
      text-align: center; }
  .checkbox > label:before {
    margin-right: 10px;
    border-style: solid;
    border-width: 1px;
    border-radius: 5px;
    content: "";
    display: inline-block;
    width: 16px;
    height: 16px;
    background-color: #D0D0D0;
    box-shadow: inset 3px 2px 6px 0px rgba(0, 0, 0, 0.3); }

.noDisplay {
  display: none; }

.centerAlign {
  text-align: center; }

.positiveBackgroundTheme {
  background-color: #21693A; }

.negativeBackgroundTheme {
  background-color: #DB5192; }

.neutralBackgroundTheme {
  background-color: #EB9100; }

.content {
  width: 80%;
  float: right;
  z-index: 0;
  position: relative; }

/*# sourceMappingURL=base.css.map */
